[{"categories":["Blog","Hugo"],"content":"#hugo Hugo快速搭建指南 ","date":"2022-08-07","objectID":"/2022/08/hugo%E6%90%AD%E5%BB%BA/:0:0","tags":["hugo"],"title":"Hugo搭建","uri":"/2022/08/hugo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hugo"],"content":"1. 安装 ","date":"2022-08-07","objectID":"/2022/08/hugo%E6%90%AD%E5%BB%BA/:1:0","tags":["hugo"],"title":"Hugo搭建","uri":"/2022/08/hugo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hugo"],"content":"2. 配置 ","date":"2022-08-07","objectID":"/2022/08/hugo%E6%90%AD%E5%BB%BA/:2:0","tags":["hugo"],"title":"Hugo搭建","uri":"/2022/08/hugo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hugo"],"content":"3. 部署 ","date":"2022-08-07","objectID":"/2022/08/hugo%E6%90%AD%E5%BB%BA/:3:0","tags":["hugo"],"title":"Hugo搭建","uri":"/2022/08/hugo%E6%90%AD%E5%BB%BA/"},{"categories":null,"content":"Hello World ","date":"2022-08-05","objectID":"/2022/08/first/:0:0","tags":null,"title":"First","uri":"/2022/08/first/"},{"categories":["Blog","Hexo"],"content":"#hexo 基于Hexo搭建私人博客 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:0:0","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"前言 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown （或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 – Hexo官方 Hexo的官网：链接 1. 安装与配置Hexo 安装Hexo前的准备工作： 1. 安装好node.js (hexo官方建议版本不低于10.13，建议使用12.0及以上) 和 git 不会安装node和git的自行百度或查看hexo官方文档 2. 注册github或gitee的账号 3. 安装一个idea工具，以方便操作git和配置hexo。 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:0:1","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"1.1 安装 win+R：cmd。全局安装hexo-cli，用来创建hexo项目。 npm install hexo-cli -g 安装完成后，在打算放hexo代码的地方，新建文件夹 hexo-blog hexo init hexo-blog # 语法 hexo init \u003cfolder\u003e 会在直接文件夹中创建hexo项目 cd hexo-blog npm install/yarn install 完成后目录 . ├── _config.yml # 网站的基础配置，文档：https://hexo.io/zh-cn/docs/configuration ├── package.json ├── scaffolds # 文章模板 ├── source | ├── _drafts | └── _posts # 你的 markdown 文章就需要存放在此目录下 └── themes # 存放主题源码 本地启动，看看效果 hexo server # 本地启动服务，默认端口4000，报错占用后可以使用 hexo server -p xx 访问 http://localhost:4000 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:1:0","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"1.2 安装配置主题 以hexo-theme-fluid 主题为例 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:2:0","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"1.2.1 npm安装 Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令： npm install --save hexo-theme-fluid # 或 yarn add hexo-theme-fluid 在博客目录下(hexo-blog)， 创建_config.fluid.yml，将主题的_config.yml 的内容复制进去。 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:2:1","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"1.2.2 源码安装 下载 最新 release 版本 (opens new window) 解压到 themes 目录，并将解压出的文件夹重命名为 fluid。 这样会有一个在博客目录下的_config.yml称为博客配置，theme/fluid/_config.yml或新建的_config.fluid.yml称为主题配置。 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:2:2","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"1.2.3 应用主题 安装完成后，需修改 Hexo 博客目录中的 _config.yml 如下： theme:fluid# 指定主题language:zh-CN# 指定语言，会影响主题显示的语言，按需修改 重启启动服务，就可在本地看到主题效果了。 之后就按照[官方手册](配置指南 | Hexo Fluid 用户手册 (fluid-dev.com) )配置主题，开始属于自己的创造时间。 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:2:3","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"1.2.4 更新主题 npm 安装的，直接用npm更新 npm update --save hexo-theme-fluid 通过release压缩包安装的，且没修改过代码的 先将原文件夹重命名为别的名称，例如 fluid-bkp，用于升级失败进行回退； 按照安装步骤，重新下载 release (opens new window) 并解压重命名为 fluid； 如果某些配置发生了变化（改名或弃用），release 的说明里会特别提示，同步修改原配置文件即可。 2. 使用github pages部署Hexo github提供了pages功能, 分别是user pages和project pages, 区别如下: User Page Project Page 是否多个 一个帐号只有一个 可以有多个, 每个repo都可以有对应的Project page repo and branch repo名必须为\u003cusername\u003e.github.io, 页面在master上 repo名随意, 页面必须在分支gh-pages下 URL http(s)://\u003cusername\u003e.github.io http(s)://\u003cusername\u003e.github.io/\u003cprojectname\u003e 两种都可以用于对hexo的部署，本次以第一种UserPage演示。 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:2:4","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"2.1 创建github仓库 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:3:0","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"方式一：双仓库管理，直接使用Github actions部署。 方便管理hexo博客代码，隐藏博客配置中的私密信息。 创建一个私有仓库blog-source，用来存放hexo项目的源码 创建一个公有仓库\u003cusername\u003e.github.io，来作为githubPages的部署仓库。 初始化本地Hexo项目，将代码推送到repo：blog-source上。 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:3:1","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"方式二：双分支管理，手动自动部署方式任君选用。 创建一个名为\u003cusername\u003e.github.io的公有仓库 初始化本地Hexo项目，将代码推送到仓库中。 创建一个新的分支 release git checkout -b release git push --set-upstream origin release # 上传 release 分支 ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:3:2","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"本地初始化git后，新建.gitignore文件 .DS_Store node_modules /dist .obsidian/workspace # hexo files /.deploy_git /public # Log files npm-debug.log* yarn-debug.log* yarn-error.log* # Editor directories and files .idea .vscode *.suo *.ntvs* *.njsproj *.sln *.sw? *.code-workspace ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:3:3","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"2.2 开启Github Pages ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:4:0","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"1. 手动开启(有自动化，谁还用手动啊) ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:4:1","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"2. 使用Hexo的deploy指令部署 首先在本地hexo项目目录下安装hexo-deploy-git npm install hexo-deploy-git --save # 或 yarn add hexo-deployer-git 修改_config.yml 的deploy项 deploy:type:git## git@github.com:\u003cusername\u003e/\u003cusername\u003e.github.io.git 需要配置sshkey## https://github.com/\u003cusername\u003e/\u003cusername\u003e..github.io.gitrepo:git@github.com:\u003c你的github用户名\u003e/\u003c你的github用户名\u003e.github.io.gitbranch:release# 这个是要用来展示的分之 对于方式一来说，repo的格式必须用ssh形式，并对\u003cusername\u003e.github.io配置deploy key。 对于方式二，两种格式都可以，ssh需要配置好ssh key；https需要输入账户密码登录 执行 hexo deploy(简写 hexo d) 即可完成自动化部署. ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:4:2","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"},{"categories":["Blog","Hexo"],"content":"3. 使用github action自动化部署 关于 Github Action，详细教程可以查看 官方文档 。按照文档中所描述的，只要我们在代码中添加一层 .github/workflows 目录，并且在目录下创建一个 yml 文件来描述具体的行为，就可以实现开启 Github Action。 创建Secrets token: 在github头像，点击 Setting -\u003e Developer settings -\u003e Persona access token 该token十分重要，泄漏后立马重置。 生成token后，复制他(后续无法再查看)，到要设置actions的博客仓库(方式一的blog-source)，选择 Secrets -\u003e Actions -\u003e New repository secret Name填写HEXO_DEPLOY， Value 填写刚刚复制的token，完成创建。 添加blog-deploy.yml name:Deployhexoblogon:push:branches:- \"master\"# master 分支有 push 行为时就触发这个 actionjobs:build-and-deploy:runs-on:ubuntu-lateststeps:- uses:actions/checkout@v3with:ref:\"master\"- name:Setupnodeuses:actions/setup-node@v3with:node-version:\"14\"- name:Setupyarn\u0026Installnode_modulesuses:borales/actions-yarn@v3.0.0with:cmd:install- name:Checkyarn\u0026nodeversionrun:| echo \"Node version is `node -v`\"echo\"Yarn version is `yarn -v`\"- name:Build\u0026Deployrun:| git config --global user.name \"GitHub Action\"gitconfig--globaluser.email\"action@github.com\"sed-i''\"s~git@github.com:~https://${{ secrets.HEXO_DEPLOY }}@github.com/~\"_config.ymlrm-rf.deploy_gityarncleanyarnbuildyarndeploy 提交上传代码，就可以看到创建的workflow在actions在运行了。 确保创建的workflow可以完整运行，之后push代码后，都会自动触发部署你的博客了。 补充 对于方式一，我们还需要对我们的部署仓库\u003cusername\u003e.github.io配置一个deploy key。 新建一个文件夹Key，在改目录下输入指令 ssh-keygen -f github-deploy-key 一路回车，得到两个文件，私钥文件 github-deploy-key 和公钥文件 github-deploy-key.pub 在\u003cusername\u003e.github.io仓库Settings -\u003e Deploy keys -\u003e Add deploy key 在 Title 输入框填写 HEXO_DEPLOY_PUB 在 Key 输入框填写 github-deploy-key.pub 文件内容 勾选 Allow write access 选项 ps - [博客](https://blog.esunr.xyz/2022/06/64163235c30f.html#1-1-%E5%AE%89%E8%A3%85) - [美化效果](https://blog.csdn.net/weixin_43471926/article/details/109798811) ","date":"2022-08-03","objectID":"/2022/08/hexo%E6%90%AD%E5%BB%BA/:4:3","tags":["hexo"],"title":"Hexo搭建","uri":"/2022/08/hexo%E6%90%AD%E5%BB%BA/"}]